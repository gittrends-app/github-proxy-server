{"version":3,"sources":["../src/cli.ts","../package.json","../src/server.ts","../src/router.ts"],"sourcesContent":["#!/usr/bin/env node\n\n/* Author: Hudson S. Borges */\nimport chalk from 'chalk';\nimport { Command, Option } from 'commander';\nimport consola from 'consola';\nimport EventEmitter from 'events';\nimport ip from 'ip';\nimport isNil from 'lodash/isNil.js';\nimport isObjectLike from 'lodash/isObjectLike.js';\nimport omit from 'lodash/omit.js';\nimport omitBy from 'lodash/omitBy.js';\nimport { pathToFileURL } from 'url';\n\nimport packageJson from '../package.json' with { type: \"json\" };\nimport { CliOpts, concatTokens, createProxyServer, readTokensFile } from './server.js';\n\nexport function createCli(): Command {\n  const program = new Command();\n\n  return program\n    .addOption(\n      new Option('-p, --port [port]', 'Port to start the proxy server')\n        .argParser(Number)\n        .default(3000)\n        .env('PORT')\n    )\n    .addOption(\n      new Option('-t, --token [token]', 'GitHub token to be used')\n        .argParser(concatTokens)\n        .default([])\n    )\n    .addOption(\n      new Option('--tokens [file]', 'File containing a list of tokens')\n        .argParser(readTokensFile)\n        .env('GPS_TOKENS_FILE')\n    )\n    .addOption(\n      new Option('--request-timeout [timeout]', 'Request timeout (ms)')\n        .argParser(Number)\n        .default(30000)\n        .env('GPS_REQUEST_TIMEOUT')\n    )\n    .addOption(\n      new Option('--min-remaining <number>', 'Stop using token on a minimum of')\n        .argParser(Number)\n        .default(100)\n        .env('GPS_MIN_REMAINING')\n    )\n    .addOption(\n      new Option('--clustering', '(clustering) enable clustering (requires redis)')\n        .default(false)\n        .env('GPS_CLUSTERING_HOST')\n    )\n    .addOption(\n      new Option('--clustering-host [host]', '(clustering) redis host')\n        .implies({ clustering: true })\n        .default('localhost')\n        .env('GPS_CLUSTERING_HOST')\n    )\n    .addOption(\n      new Option('--clustering-port [port]', '(clustering) redis port')\n        .argParser(Number)\n        .implies({ clustering: true })\n        .default(6379)\n        .env('GPS_CLUSTERING_PORT')\n    )\n    .addOption(\n      new Option('--clustering-db [db]', '(clustering) redis db')\n        .argParser(Number)\n        .implies({ clustering: true })\n        .default(0)\n        .env('GPS_CLUSTERING_DB')\n    )\n    .addOption(new Option('--silent', 'Dont show requests outputs'))\n    .addOption(\n      new Option(\n        '--no-override-authorization',\n        'By default, the authorization header is overrided with a configured token'\n      )\n    )\n    .addOption(new Option('--no-status-monitor', 'Disable requests monitoring on /status'))\n    .version(packageJson.version || '?', '-v, --version', 'output the current version')\n    .action(async (options) => {\n      if (!options.token.length && !(options.tokens && options.tokens.length)) {\n        consola.info(`${program.helpInformation()}`);\n        consola.error(`Arguments missing (\"--token\" or \"--tokens\" is mandatory).\\n\\n`);\n        process.exit(1);\n      }\n\n      EventEmitter.defaultMaxListeners = Number.MAX_SAFE_INTEGER;\n\n      const tokens = [...options.token, ...(options.tokens || [])].reduce(\n        (memo: string[], token: string) => concatTokens(token, memo),\n        []\n      );\n\n      const appOptions: CliOpts = {\n        requestTimeout: options.requestTimeout,\n        silent: options.silent,\n        overrideAuthorization: options.overrideAuthorization,\n        tokens: tokens,\n        clustering: options.clustering\n          ? {\n              host: options.clusteringHost,\n              port: options.clusteringPort,\n              db: options.clusteringDb\n            }\n          : undefined,\n        minRemaining: options.minRemaining,\n        statusMonitor: options.statusMonitor\n      };\n\n      const app = createProxyServer(appOptions);\n\n      app\n        .on('log', (data) => process.stdout.write(data.toString()))\n        .on('warn', consola.warn)\n        .on('error', consola.error);\n\n      const server = app.listen({ host: '0.0.0.0', port: options.port }, (error?: Error) => {\n        if (error) {\n          consola.error(error);\n          process.exit(1);\n        }\n\n        const host = `http://${ip.address()}:${options.port}`;\n        consola.success(\n          `Proxy server running on ${host} (tokens: ${chalk.greenBright(tokens.length)})`\n        );\n\n        function formatObject(object: Record<string, unknown>): string {\n          return Object.entries(omitBy(object, (value) => isNil(value)))\n            .sort((a: [string, unknown], b: [string, unknown]) => (a[0] > b[0] ? 1 : -1))\n            .map(\n              ([k, v]) =>\n                `${k}: ${\n                  isObjectLike(v)\n                    ? `{ ${formatObject(v as Record<string, unknown>)} }`\n                    : chalk.greenBright(v)\n                }`\n            )\n            .join(', ');\n        }\n\n        consola.success(\n          `${chalk.bold('Options')}: %s`,\n          formatObject(omit(appOptions, ['token', 'tokens']))\n        );\n      });\n\n      process.on('SIGTERM', async () => {\n        consola.info('SIGTERM signal received: closing HTTP server');\n\n        server.close((err?: Error) => {\n          if (err) {\n            consola.error(err);\n            process.exit(1);\n          }\n\n          consola.success('Server closed');\n          process.exit(0);\n        });\n      });\n    });\n}\n\n// parse arguments from command line\nif (import.meta.url === pathToFileURL(process.argv[1]).href) {\n  createCli().parse(process.argv);\n}\n","{\n  \"name\": \"@gittrends-app/github-proxy-server\",\n  \"version\": \"10.3.2\",\n  \"exports\": \"./dist/cli.js\",\n  \"engines\": {\n    \"node\": \">=20\"\n  },\n  \"type\": \"module\",\n  \"repository\": \"git@github.com:gittrends-app/github-proxy-server.git\",\n  \"author\": \"Hudson Silva Borges <hudsonsilbor@gmail.com>\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"start\": \"node dist/cli.js\",\n    \"dev\": \"tsx watch src/cli.ts\",\n    \"dev-no-reload\": \"tsx src/cli.ts\",\n    \"jest\": \"NODE_NO_WARNINGS=1 NODE_OPTIONS=\\\"$NODE_OPTIONS --experimental-vm-modules\\\" jest\",\n    \"test\": \"NODE_NO_WARNINGS=1 NODE_OPTIONS=\\\"$NODE_OPTIONS --experimental-vm-modules\\\" jest --no-cache --coverage\",\n    \"commit\": \"git-cz\",\n    \"lint\": \"eslint src\",\n    \"build\": \"shx rm -rf dist && tsup-node src/cli.ts --format esm --sourcemap --minify\",\n    \"prepare\": \"husky\",\n    \"prettier\": \"prettier --write --config .prettierrc.yml --ignore-path .prettierignore  '**/*.ts'\",\n    \"release\": \"standard-version\",\n    \"np\": \"np --no-publish --yarn --contents dist\"\n  },\n  \"bin\": {\n    \"github-proxy-server\": \"./dist/cli.js\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"files\": [\n    \"dist\",\n    \"architecture.png\"\n  ],\n  \"dependencies\": {\n    \"bottleneck\": \"^2.19.5\",\n    \"chalk\": \"4\",\n    \"commander\": \"^12.1.0\",\n    \"consola\": \"^3.2.3\",\n    \"dayjs\": \"^1.11.12\",\n    \"dotenv-override-true\": \"^6.2.2\",\n    \"express\": \"^4.19.2\",\n    \"http-proxy\": \"^1.18.1\",\n    \"http-status-codes\": \"^2.3.0\",\n    \"https-proxy-agent\": \"^7.0.5\",\n    \"ioredis\": \"^5.4.1\",\n    \"ip\": \"^2.0.1\",\n    \"lodash\": \"^4.17.21\",\n    \"node-fetch\": \"^3.3.2\",\n    \"p-limit\": \"^6.1.0\",\n    \"pino\": \"^9.3.2\",\n    \"pino-http\": \"^10.2.0\",\n    \"pino-pretty\": \"^11.2.2\",\n    \"swagger-stats\": \"^0.99.7\",\n    \"table\": \"^6.8.2\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^19.3.0\",\n    \"@commitlint/config-conventional\": \"^19.2.2\",\n    \"@eslint/eslintrc\": \"^3.1.0\",\n    \"@eslint/js\": \"^9.8.0\",\n    \"@jest/globals\": \"^29.7.0\",\n    \"@trivago/prettier-plugin-sort-imports\": \"^4.3.0\",\n    \"@tsconfig/node20\": \"^20.1.4\",\n    \"@types/async\": \"^3.2.24\",\n    \"@types/http-proxy\": \"^1.17.14\",\n    \"@types/ip\": \"^1.1.3\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/lodash\": \"^4.17.7\",\n    \"@types/node\": \"^22.1.0\",\n    \"@types/supertest\": \"^6.0.2\",\n    \"@types/swagger-stats\": \"^0.95.11\",\n    \"@typescript-eslint/eslint-plugin\": \"^8.0.0\",\n    \"@typescript-eslint/parser\": \"^8.0.0\",\n    \"commitizen\": \"^4.3.0\",\n    \"cz-conventional-changelog\": \"3.3.0\",\n    \"eslint\": \"^9.8.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-prettier\": \"^5.2.1\",\n    \"globals\": \"^15.9.0\",\n    \"husky\": \"^9.1.4\",\n    \"jest\": \"^29.7.0\",\n    \"nock\": \"^13.5.5\",\n    \"np\": \"^10.0.7\",\n    \"prettier\": \"^3.3.3\",\n    \"shx\": \"^0.3.4\",\n    \"standard-version\": \"^9.5.0\",\n    \"supertest\": \"^7.0.0\",\n    \"tmp-promise\": \"^3.0.3\",\n    \"ts-jest\": \"^29.2.4\",\n    \"tsup\": \"^8.2.4\",\n    \"tsx\": \"^4.19.0\",\n    \"typescript\": \"^5.5.4\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"peerDependencies\": {\n    \"prom-client\": \"14\"\n  }\n}\n","#!/usr/bin/env node\n\n/* Author: Hudson S. Borges */\nimport chalk from 'chalk';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime.js';\nimport express, { Express, Request, Response } from 'express';\nimport compact from 'lodash/compact.js';\nimport uniq from 'lodash/uniq.js';\nimport { existsSync, readFileSync } from 'node:fs';\nimport { resolve } from 'node:path';\nimport { pino } from 'pino';\nimport { pinoHttp } from 'pino-http';\nimport pinoPretty from 'pino-pretty';\nimport swaggerStats from 'swagger-stats';\nimport { getBorderCharacters, table } from 'table';\n\nimport ProxyRouter, { ProxyRouterOpts, ProxyRouterResponse, WorkerLogger } from './router.js';\n\ndayjs.extend(relativeTime);\n\nfunction statusFormatter(status: number | string): string {\n  switch (true) {\n    case /[23]\\d{2}/.test(`${status}`):\n      return chalk.green(status);\n    case /[4]\\d{2}/.test(`${status}`):\n      return chalk.yellow(status);\n    default:\n      return chalk.red(status);\n  }\n}\n\nfunction logTransform(chunk: WorkerLogger): string {\n  const data = {\n    resource: chunk.resource,\n    token: chunk.token,\n    pending: chunk.pending,\n    remaining: chunk.remaining,\n    reset: dayjs.unix(chunk.reset).fromNow(),\n    duration: `${chunk.duration / 1000}s`,\n    status: statusFormatter(chunk.status || '-')\n  };\n\n  return (\n    table([Object.values(data)], {\n      columnDefault: { alignment: 'right', width: 5 },\n      columns: {\n        0: { width: 11 },\n        1: { width: 5 },\n        2: { width: 3 },\n        3: { width: 5 },\n        4: { width: 18 },\n        5: { width: 7 },\n        6: { width: `${chunk.status || '-'}`.length, alignment: 'left' }\n      },\n      border: getBorderCharacters('void'),\n      singleLine: true\n    }).trimEnd() + '\\n'\n  );\n}\n\n// parse tokens from input\nexport function parseTokens(text: string): string[] {\n  return text\n    .split(/\\n/g)\n    .map((v) => v.replace(/\\s/g, ''))\n    .reduce((acc: string[], v: string) => {\n      if (!v || /^(\\/{2}|#).*/gi.test(v)) return acc;\n      return acc.concat([v.replace(/.*:(.+)/i, '$1')]);\n    }, [])\n    .reduce((acc: string[], token: string) => concatTokens(token, acc), []);\n}\n\n// concat tokens in commander\nexport function concatTokens(token: string, list: string[]): string[] {\n  if (token.length !== 40)\n    throw new Error('Invalid access token detected (they have 40 characters)');\n  return uniq([...list, token]);\n}\n\n// read tokens from a file\nexport function readTokensFile(filename: string): string[] {\n  const filepath = resolve(process.cwd(), filename);\n  if (!existsSync(filepath)) throw new Error(`File \"${filename}\" not found!`);\n  return parseTokens(readFileSync(filepath, 'utf8'));\n}\n\nexport type CliOpts = ProxyRouterOpts & {\n  tokens: string[];\n  silent?: boolean;\n  statusMonitor?: boolean;\n};\n\nexport function createProxyServer(options: CliOpts): Express {\n  const tokens = compact(options.tokens).reduce(\n    (memo: string[], token: string) => concatTokens(token, memo),\n    []\n  );\n\n  const app = express();\n\n  if (process.env.DEBUG === 'true') {\n    app.use(\n      pinoHttp({\n        level: 'info',\n        serializers: {\n          req: (req) => ({ method: req.method, url: req.url }),\n          res: ({ statusCode }) => ({ statusCode })\n        },\n        logger: pino(pinoPretty({ colorize: true }))\n      }) as never\n    );\n  }\n\n  if (options.statusMonitor) {\n    app.use(\n      swaggerStats.getMiddleware({\n        name: 'GitHub Proxy Server',\n        version: process.env.npm_package_version,\n        uriPath: '/status'\n      })\n    );\n  }\n\n  const proxy = new ProxyRouter(tokens, {\n    overrideAuthorization: options.overrideAuthorization ?? true,\n    ...options\n  });\n\n  proxy.on('error', (message) => app.emit('error', message));\n\n  if (!options.silent) {\n    proxy.on('log', (data) => app.emit('log', logTransform(data)));\n    proxy.on('warn', (message) => app.emit('warn', message));\n  }\n\n  function notSupported(req: Request, res: Response) {\n    res.status(ProxyRouterResponse.PROXY_ERROR).send({ message: `Endpoint not supported` });\n  }\n\n  app\n    .post('/graphql', (req: Request, reply: Response) => proxy.schedule(req, reply))\n    .get('/*', (req: Request, reply: Response) => proxy.schedule(req, reply));\n\n  app.delete('/*', notSupported);\n  app.patch('/*', notSupported);\n  app.put('/*', notSupported);\n  app.post('/*', notSupported);\n\n  return app;\n}\n","/* Author: Hudson S. Borges */\nimport Bottleneck from 'bottleneck';\nimport dayjs from 'dayjs';\nimport { Request, Response } from 'express';\nimport Server, { default as proxy } from 'http-proxy';\nimport { StatusCodes } from 'http-status-codes';\nimport minBy from 'lodash/minBy.js';\nimport fetch from 'node-fetch';\nimport EventEmitter from 'node:events';\nimport { ClientRequest, IncomingMessage } from 'node:http';\nimport { Agent } from 'node:https';\nimport { setTimeout } from 'node:timers/promises';\nimport Limiter from 'p-limit';\n\nexport type ProxyRouterOpts = {\n  requestTimeout: number;\n  minRemaining: number;\n  overrideAuthorization?: boolean;\n  clustering?: {\n    host: string;\n    port: number;\n    db: number;\n  };\n};\n\ntype ExtendedRequest = Request & {\n  startedAt?: Date;\n  proxyRequest?: ClientRequest;\n};\n\ntype ExtendedIncomingMessage = IncomingMessage & {\n  startedAt?: Date;\n  hasAuthorization?: boolean;\n  proxyRequest?: ClientRequest;\n};\n\ntype APIResources = 'core' | 'search' | 'code_search' | 'graphql';\n\nexport interface WorkerLogger {\n  resource: APIResources;\n  token: string;\n  pending: number;\n  remaining: number;\n  reset: number;\n  status?: number | string;\n  duration: number;\n}\n\nclass ProxyWorker extends EventEmitter {\n  readonly queue: Bottleneck;\n\n  readonly proxy: Server;\n  readonly token: string;\n  readonly schedule;\n\n  readonly defaults: {\n    resource: APIResources;\n    limit: number;\n    reset: number;\n  };\n\n  remaining: number = 0;\n  reset: number = Date.now() / 1000 + 1;\n\n  constructor(token: string, opts: ProxyRouterOpts & { resource: APIResources }) {\n    super({});\n\n    this.token = token;\n\n    switch (opts.resource) {\n      case 'code_search':\n        this.defaults = { resource: opts.resource, limit: 10, reset: 1000 * 60 };\n        break;\n      case 'search':\n        this.defaults = { resource: opts.resource, limit: 30, reset: 1000 * 60 };\n        break;\n      case 'graphql':\n      default:\n        this.defaults = { resource: opts.resource, limit: 5000, reset: 1000 * 60 * 60 };\n    }\n\n    this.proxy = proxy.createProxyServer({\n      target: 'https://api.github.com',\n      ws: false,\n      xfwd: true,\n      changeOrigin: true,\n      autoRewrite: true,\n      proxyTimeout: opts.requestTimeout,\n      agent: new Agent({\n        keepAlive: true,\n        keepAliveMsecs: 15000,\n        timeout: opts.requestTimeout,\n        scheduling: 'fifo'\n      })\n    });\n\n    this.proxy.on('proxyReq', (proxyReq, req: ExtendedIncomingMessage) => {\n      req.proxyRequest = proxyReq;\n      req.startedAt = new Date();\n      req.hasAuthorization = opts.overrideAuthorization\n        ? false\n        : !!proxyReq.getHeader('authorization');\n\n      if (!req.hasAuthorization) proxyReq.setHeader('authorization', `token ${token}`);\n    });\n\n    this.proxy.on('proxyRes', (proxyRes, req: ExtendedIncomingMessage) => {\n      const replaceURL = (url: string): string =>\n        req.headers.host\n          ? url.replaceAll('https://api.github.com', `http://${req.headers.host}`)\n          : url;\n\n      proxyRes.headers.link =\n        proxyRes.headers.link &&\n        (Array.isArray(proxyRes.headers.link)\n          ? proxyRes.headers.link.map(replaceURL)\n          : replaceURL(proxyRes.headers.link));\n\n      if (req.hasAuthorization) return;\n\n      this.updateLimits({\n        status: `${proxyRes.statusCode}`,\n        ...(proxyRes.headers as Record<string, string>)\n      });\n\n      this.log(proxyRes.statusCode, req.startedAt);\n\n      proxyRes.headers['access-control-expose-headers'] = (\n        proxyRes.headers['access-control-expose-headers'] || ''\n      )\n        .split(', ')\n        .filter((header) => {\n          if (/(ratelimit|scope)/i.test(header)) {\n            delete proxyRes.headers[header.toLowerCase()];\n            return false;\n          }\n          return true;\n        })\n        .join(', ');\n    });\n\n    let maxConcurrent = 1;\n    if (opts.resource === 'graphql') maxConcurrent = 2;\n    else if (opts.resource === 'core') maxConcurrent = 10;\n\n    this.queue = new Bottleneck({\n      maxConcurrent,\n      id: `proxy_server:${opts.resource}:${this.token}`,\n      ...(opts?.clustering\n        ? {\n            datastore: 'ioredis',\n            clearDatastore: false,\n            clientOptions: {\n              host: opts.clustering.host,\n              port: opts.clustering.port,\n              options: { db: opts.clustering.db }\n            },\n            timeout: opts.requestTimeout\n          }\n        : { datastore: 'local' })\n    });\n\n    this.schedule = this.queue.wrap(async (req: ExtendedRequest, res: Response): Promise<void> => {\n      if (req.socket.destroyed) return this.log();\n\n      if (this.remaining <= opts.minRemaining && this.reset > Date.now() / 1000) {\n        this.emit('retry', req, res);\n        return;\n      }\n\n      const task = new Promise((resolve, reject) => {\n        this.remaining -= 1;\n        req.socket.once('close', resolve);\n        req.socket.once('error', reject);\n        res.once('close', resolve);\n        res.once('error', reject);\n        this.proxy.web(req, res as never, undefined, (error) => reject(error));\n      }).catch(async (error) => {\n        this.log(error.code || ProxyRouterResponse.PROXY_ERROR, req.startedAt);\n\n        if (!req.socket.destroyed && !req.socket.writableFinished) {\n          res.status(StatusCodes.BAD_GATEWAY).send();\n        }\n\n        req.proxyRequest?.destroy();\n        res.destroy();\n      });\n\n      await Promise.all([\n        task,\n        setTimeout(['search', 'code_search'].includes(opts.resource) ? 2000 : 1000)\n      ]);\n    });\n  }\n\n  public async refreshRateLimits(): Promise<void> {\n    await fetch('https://api.github.com/rate_limit', {\n      headers: {\n        authorization: `token ${this.token}`,\n        'user-agent': 'GitHub API Proxy Server (@hsborges/github-proxy-server)'\n      }\n    }).then(async (response) => {\n      if (response.status === 401) {\n        this.remaining = 0;\n        this.reset = Infinity;\n        this.emit('error', `Invalid token detected (${this.token}).`, this.token);\n      } else {\n        const res = (await response.json()) as {\n          resources: Record<string, { remaining: number; reset: number }>;\n        };\n        this.remaining = res.resources[this.defaults.resource].remaining;\n        this.reset = res.resources[this.defaults.resource].reset;\n        this.log(undefined, new Date());\n      }\n    });\n  }\n\n  private updateLimits(headers: Record<string, string>): void {\n    if (!headers['x-ratelimit-remaining']) return;\n    if (/401/i.test(headers.status)) {\n      if (parseInt(headers['x-ratelimit-limit'], 10) > 0) this.remaining = 0;\n      else this.remaining -= 1;\n    } else {\n      this.remaining = parseInt(headers['x-ratelimit-remaining'], 10) - this.running;\n      this.reset = parseInt(headers['x-ratelimit-reset'], 10);\n    }\n  }\n\n  private log(status?: number | string, startedAt?: Date): void {\n    this.emit('log', {\n      resource: this.defaults.resource,\n      token: this.token.slice(-4),\n      pending: this.queued,\n      remaining: this.remaining,\n      reset: this.reset,\n      status: status,\n      duration: startedAt ? Date.now() - startedAt.getTime() : 0\n    } satisfies WorkerLogger);\n  }\n\n  get pending(): number {\n    const { RECEIVED, QUEUED, RUNNING, EXECUTING } = this.queue.counts();\n    return RECEIVED + QUEUED + RUNNING + EXECUTING;\n  }\n\n  get running(): number {\n    const { RUNNING, EXECUTING } = this.queue.counts();\n    return RUNNING + EXECUTING;\n  }\n\n  get queued(): number {\n    const { RECEIVED, QUEUED } = this.queue.counts();\n    return RECEIVED + QUEUED;\n  }\n\n  destroy(): this {\n    this.proxy.close();\n    return this;\n  }\n}\n\nexport enum ProxyRouterResponse {\n  PROXY_ERROR = 600\n}\n\nexport default class ProxyRouter extends EventEmitter {\n  private readonly options: ProxyRouterOpts;\n  private readonly limiter = Limiter(1);\n\n  private readonly clients: Array<{\n    token: string;\n    core: ProxyWorker;\n    search: ProxyWorker;\n    code_search: ProxyWorker;\n    graphql: ProxyWorker;\n  }>;\n\n  constructor(tokens: string[], opts?: Partial<ProxyRouterOpts>) {\n    super({});\n\n    if (!tokens.length) throw new Error('At least one token is required!');\n\n    this.clients = [];\n    this.options = Object.assign({ requestTimeout: 20000, minRemaining: 100 }, opts);\n\n    tokens.forEach((token) => this.addToken(token));\n  }\n\n  // function to select the best client and queue request\n  async schedule(req: Request, res: Response): Promise<void> {\n    return this.limiter(async () => {\n      const isGraphQL = req.path.startsWith('/graphql') && req.method === 'POST';\n      const isCodeSearch = req.path.startsWith('/search/code');\n      const isSearch = req.path.startsWith('/search');\n\n      let clients: ProxyWorker[];\n\n      if (isGraphQL) clients = this.clients.map((client) => client.graphql);\n      else if (isCodeSearch) clients = this.clients.map((client) => client.code_search);\n      else if (isSearch) clients = this.clients.map((client) => client.search);\n      else clients = this.clients.map((client) => client.core);\n\n      const available = clients.filter(\n        (client) =>\n          client.remaining > (isSearch ? 1 : this.options.minRemaining) ||\n          client.reset * 1000 < Date.now()\n      );\n\n      if (available.length === 0) {\n        const resetAt = Math.min(...clients.map((c) => c.reset)) * 1000;\n\n        this.emit(\n          'warn',\n          `There is no client available. Retrying at ${dayjs(resetAt).format('HH:mm:ss')}.`\n        );\n\n        return setTimeout(Math.max(0, resetAt - Date.now()) + 1000).then(() => {\n          this.schedule(req, res);\n        });\n      } else {\n        const client = minBy(\n          available,\n          (client) => client.pending + 1 / client.remaining\n        ) as ProxyWorker;\n\n        client.schedule(req, res);\n      }\n    });\n  }\n\n  addToken(token: string): void {\n    if (this.clients.map((client) => client.token).includes(token)) return;\n\n    const core = new ProxyWorker(token, { ...this.options, resource: 'core' });\n    const search = new ProxyWorker(token, { ...this.options, resource: 'search' });\n    const codeSearch = new ProxyWorker(token, { ...this.options, resource: 'code_search' });\n    const graphql = new ProxyWorker(token, { ...this.options, resource: 'graphql' });\n\n    for (const worker of [core, search, codeSearch, graphql]) {\n      worker.on('error', (error: unknown) => this.emit('error', error));\n      worker.on('retry', (req: ExtendedRequest, res: Response) => this.schedule(req, res));\n      worker.on('log', (log: WorkerLogger) => this.emit('log', log));\n      worker.on('warn', (message: string) => this.emit('warn', message));\n      worker.refreshRateLimits().then(() => this.emit('ready'));\n    }\n\n    this.clients.push({ token, core, search, code_search: codeSearch, graphql });\n  }\n\n  removeToken(token: string): void {\n    this.clients.splice(this.clients.map((c) => c.token).indexOf(token), 1).forEach((client) => {\n      for (const worker of [client.core, client.search, client.code_search, client.graphql]) {\n        worker.proxy.close();\n        worker.queue.stop({ dropWaitingJobs: false });\n        worker.queue.disconnect();\n        worker.destroy();\n      }\n    });\n  }\n\n  async refreshRateLimits(): Promise<void> {\n    await Promise.all(\n      this.clients.map((client) =>\n        Promise.all(\n          [client.core, client.search, client.code_search, client.graphql].map((w) =>\n            w.refreshRateLimits()\n          )\n        )\n      )\n    ).then(() => this.emit('ready'));\n  }\n\n  get tokens(): string[] {\n    return this.clients.map((client) => client.token);\n  }\n\n  destroy(): this {\n    this.clients.forEach((client) => this.removeToken(client.token));\n    return this;\n  }\n}\n"],"mappings":"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","names":["chalk","Command","Option","consola","EventEmitter","ip","isNil","isObjectLike","omit","omitBy","pathToFileURL","package_default","chalk","dayjs","relativeTime","express","compact","uniq","existsSync","readFileSync","resolve","pino","pinoHttp","pinoPretty","swaggerStats","getBorderCharacters","table","Bottleneck","dayjs","proxy","StatusCodes","minBy","fetch","EventEmitter","Agent","setTimeout","Limiter","ProxyWorker","token","opts","proxyReq","req","proxyRes","replaceURL","url","header","maxConcurrent","res","task","resolve","reject","error","response","headers","status","startedAt","RECEIVED","QUEUED","RUNNING","EXECUTING","ProxyRouter","EventEmitter","Limiter","tokens","opts","token","req","res","isGraphQL","isCodeSearch","isSearch","clients","client","available","resetAt","c","dayjs","setTimeout","minBy","core","ProxyWorker","search","codeSearch","graphql","worker","error","log","message","w","dayjs","relativeTime","statusFormatter","status","chalk","logTransform","chunk","data","table","getBorderCharacters","parseTokens","text","v","acc","token","concatTokens","list","uniq","readTokensFile","filename","filepath","resolve","existsSync","readFileSync","createProxyServer","options","tokens","compact","memo","app","express","pinoHttp","req","statusCode","pino","pinoPretty","swaggerStats","proxy","ProxyRouter","message","notSupported","res","reply","createCli","program","Command","Option","concatTokens","readTokensFile","package_default","options","consola","EventEmitter","tokens","memo","token","appOptions","app","createProxyServer","data","server","error","host","ip","chalk","formatObject","object","omitBy","value","isNil","a","b","k","v","isObjectLike","omit","err","pathToFileURL"]}