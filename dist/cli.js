#!/usr/bin/env node
import v from"chalk";import{Command as J,Option as c}from"commander";import l from"consola";import V from"events";import K from"ip";import Z from"lodash/isNil.js";import ee from"lodash/isObjectLike.js";import te from"lodash/omit.js";import re from"lodash/omitBy.js";import{pathToFileURL as se}from"url";var b={name:"@gittrends-app/github-proxy-server",version:"10.3.2",exports:"./dist/cli.js",engines:{node:">=20"},type:"module",repository:"git@github.com:gittrends-app/github-proxy-server.git",author:"Hudson Silva Borges <hudsonsilbor@gmail.com>",license:"MIT",scripts:{start:"node dist/cli.js",dev:"tsx watch src/cli.ts","dev-no-reload":"tsx src/cli.ts",jest:'NODE_NO_WARNINGS=1 NODE_OPTIONS="$NODE_OPTIONS --experimental-vm-modules" jest',test:'NODE_NO_WARNINGS=1 NODE_OPTIONS="$NODE_OPTIONS --experimental-vm-modules" jest --no-cache --coverage',commit:"git-cz",lint:"eslint src",build:"shx rm -rf dist && tsup-node src/cli.ts --format esm --sourcemap --minify",prepare:"husky",prettier:"prettier --write --config .prettierrc.yml --ignore-path .prettierignore  '**/*.ts'",release:"standard-version",np:"np --no-publish --yarn --contents dist"},bin:{"github-proxy-server":"./dist/cli.js"},publishConfig:{access:"public"},files:["dist","architecture.png"],dependencies:{bottleneck:"^2.19.5",chalk:"4",commander:"^12.1.0",consola:"^3.2.3",dayjs:"^1.11.12","dotenv-override-true":"^6.2.2",express:"^4.19.2","http-proxy":"^1.18.1","http-status-codes":"^2.3.0","https-proxy-agent":"^7.0.5",ioredis:"^5.4.1",ip:"^2.0.1",lodash:"^4.17.21","node-fetch":"^3.3.2","p-limit":"^6.1.0",pino:"^9.3.2","pino-http":"^10.2.0","pino-pretty":"^11.2.2","swagger-stats":"^0.99.7",table:"^6.8.2"},devDependencies:{"@commitlint/cli":"^19.3.0","@commitlint/config-conventional":"^19.2.2","@eslint/eslintrc":"^3.1.0","@eslint/js":"^9.8.0","@jest/globals":"^29.7.0","@trivago/prettier-plugin-sort-imports":"^4.3.0","@tsconfig/node20":"^20.1.4","@types/async":"^3.2.24","@types/http-proxy":"^1.17.14","@types/ip":"^1.1.3","@types/jest":"^29.5.12","@types/lodash":"^4.17.7","@types/node":"^22.1.0","@types/supertest":"^6.0.2","@types/swagger-stats":"^0.95.11","@typescript-eslint/eslint-plugin":"^8.0.0","@typescript-eslint/parser":"^8.0.0",commitizen:"^4.3.0","cz-conventional-changelog":"3.3.0",eslint:"^9.8.0","eslint-config-prettier":"^9.1.0","eslint-plugin-import":"^2.29.1","eslint-plugin-prettier":"^5.2.1",globals:"^15.9.0",husky:"^9.1.4",jest:"^29.7.0",nock:"^13.5.5",np:"^10.0.7",prettier:"^3.3.3",shx:"^0.3.4","standard-version":"^9.5.0",supertest:"^7.0.0","tmp-promise":"^3.0.3","ts-jest":"^29.2.4",tsup:"^8.2.4",tsx:"^4.19.0",typescript:"^5.5.4"},config:{commitizen:{path:"./node_modules/cz-conventional-changelog"}},peerDependencies:{"prom-client":"14"}};import y from"chalk";import x from"dayjs";import D from"dayjs/plugin/relativeTime.js";import G from"express";import C from"lodash/compact.js";import $ from"lodash/uniq.js";import{existsSync as L,readFileSync as z}from"node:fs";import{resolve as j}from"node:path";import{pino as M}from"pino";import{pinoHttp as U}from"pino-http";import W from"pino-pretty";import H from"swagger-stats";import{getBorderCharacters as B,table as F}from"table";import P from"bottleneck";import T from"dayjs";import{default as S}from"http-proxy";import{StatusCodes as I}from"http-status-codes";import _ from"lodash/minBy.js";import N from"node-fetch";import k from"node:events";import{Agent as A}from"node:https";import{setTimeout as w}from"node:timers/promises";import q from"p-limit";var d=class extends k{queue;proxy;token;schedule;defaults;remaining=0;reset=Date.now()/1e3+1;constructor(e,t){switch(super({}),this.token=e,t.resource){case"code_search":this.defaults={resource:t.resource,limit:10,reset:1e3*60};break;case"search":this.defaults={resource:t.resource,limit:30,reset:1e3*60};break;case"graphql":default:this.defaults={resource:t.resource,limit:5e3,reset:1e3*60*60}}this.proxy=S.createProxyServer({target:"https://api.github.com",ws:!1,xfwd:!0,changeOrigin:!0,autoRewrite:!0,proxyTimeout:t.requestTimeout,agent:new A({keepAlive:!0,keepAliveMsecs:15e3,timeout:t.requestTimeout,scheduling:"fifo"})}),this.proxy.on("proxyReq",(s,r)=>{r.proxyRequest=s,r.startedAt=new Date,r.hasAuthorization=t.overrideAuthorization?!1:!!s.getHeader("authorization"),r.hasAuthorization||s.setHeader("authorization",`token ${e}`)}),this.proxy.on("proxyRes",(s,r)=>{let i=a=>r.headers.host?a.replaceAll("https://api.github.com",`http://${r.headers.host}`):a;s.headers.link=s.headers.link&&(Array.isArray(s.headers.link)?s.headers.link.map(i):i(s.headers.link)),!r.hasAuthorization&&(this.updateLimits({status:`${s.statusCode}`,...s.headers}),this.log(s.statusCode,r.startedAt),s.headers["access-control-expose-headers"]=(s.headers["access-control-expose-headers"]||"").split(", ").filter(a=>/(ratelimit|scope)/i.test(a)?(delete s.headers[a.toLowerCase()],!1):!0).join(", "))});let o=1;t.resource==="graphql"?o=2:t.resource==="core"&&(o=10),this.queue=new P({maxConcurrent:o,id:`proxy_server:${t.resource}:${this.token}`,...t?.clustering?{datastore:"ioredis",clearDatastore:!1,clientOptions:{host:t.clustering.host,port:t.clustering.port,options:{db:t.clustering.db}},timeout:t.requestTimeout}:{datastore:"local"}}),this.schedule=this.queue.wrap(async(s,r)=>{if(s.socket.destroyed)return this.log();if(this.remaining<=t.minRemaining&&this.reset>Date.now()/1e3){this.emit("retry",s,r);return}let i=new Promise((a,u)=>{this.remaining-=1,s.socket.once("close",a),s.socket.once("error",u),r.once("close",a),r.once("error",u),this.proxy.web(s,r,void 0,m=>u(m))}).catch(async a=>{this.log(a.code||600,s.startedAt),!s.socket.destroyed&&!s.socket.writableFinished&&r.status(I.BAD_GATEWAY).send(),s.proxyRequest?.destroy(),r.destroy()});await Promise.all([i,w(["search","code_search"].includes(t.resource)?2e3:1e3)])})}async refreshRateLimits(){await N("https://api.github.com/rate_limit",{headers:{authorization:`token ${this.token}`,"user-agent":"GitHub API Proxy Server (@hsborges/github-proxy-server)"}}).then(async e=>{if(e.status===401)this.remaining=0,this.reset=1/0,this.emit("error",`Invalid token detected (${this.token}).`,this.token);else{let t=await e.json();this.remaining=t.resources[this.defaults.resource].remaining,this.reset=t.resources[this.defaults.resource].reset,this.log(void 0,new Date)}})}updateLimits(e){e["x-ratelimit-remaining"]&&(/401/i.test(e.status)?parseInt(e["x-ratelimit-limit"],10)>0?this.remaining=0:this.remaining-=1:(this.remaining=parseInt(e["x-ratelimit-remaining"],10)-this.running,this.reset=parseInt(e["x-ratelimit-reset"],10)))}log(e,t){this.emit("log",{resource:this.defaults.resource,token:this.token.slice(-4),pending:this.queued,remaining:this.remaining,reset:this.reset,status:e,duration:t?Date.now()-t.getTime():0})}get pending(){let{RECEIVED:e,QUEUED:t,RUNNING:o,EXECUTING:s}=this.queue.counts();return e+t+o+s}get running(){let{RUNNING:e,EXECUTING:t}=this.queue.counts();return e+t}get queued(){let{RECEIVED:e,QUEUED:t}=this.queue.counts();return e+t}destroy(){return this.proxy.close(),this}};var g=class extends k{options;limiter=q(1);clients;constructor(e,t){if(super({}),!e.length)throw new Error("At least one token is required!");this.clients=[],this.options=Object.assign({requestTimeout:2e4,minRemaining:100},t),e.forEach(o=>this.addToken(o))}async schedule(e,t){return this.limiter(async()=>{let o=e.path.startsWith("/graphql")&&e.method==="POST",s=e.path.startsWith("/search/code"),r=e.path.startsWith("/search"),i;o?i=this.clients.map(u=>u.graphql):s?i=this.clients.map(u=>u.code_search):r?i=this.clients.map(u=>u.search):i=this.clients.map(u=>u.core);let a=i.filter(u=>u.remaining>(r?1:this.options.minRemaining)||u.reset*1e3<Date.now());if(a.length===0){let u=Math.min(...i.map(m=>m.reset))*1e3;return this.emit("warn",`There is no client available. Retrying at ${T(u).format("HH:mm:ss")}.`),w(Math.max(0,u-Date.now())+1e3).then(()=>{this.schedule(e,t)})}else _(a,m=>m.pending+1/m.remaining).schedule(e,t)})}addToken(e){if(this.clients.map(i=>i.token).includes(e))return;let t=new d(e,{...this.options,resource:"core"}),o=new d(e,{...this.options,resource:"search"}),s=new d(e,{...this.options,resource:"code_search"}),r=new d(e,{...this.options,resource:"graphql"});for(let i of[t,o,s,r])i.on("error",a=>this.emit("error",a)),i.on("retry",(a,u)=>this.schedule(a,u)),i.on("log",a=>this.emit("log",a)),i.on("warn",a=>this.emit("warn",a)),i.refreshRateLimits().then(()=>this.emit("ready"));this.clients.push({token:e,core:t,search:o,code_search:s,graphql:r})}removeToken(e){this.clients.splice(this.clients.map(t=>t.token).indexOf(e),1).forEach(t=>{for(let o of[t.core,t.search,t.code_search,t.graphql])o.proxy.close(),o.queue.stop({dropWaitingJobs:!1}),o.queue.disconnect(),o.destroy()})}async refreshRateLimits(){await Promise.all(this.clients.map(e=>Promise.all([e.core,e.search,e.code_search,e.graphql].map(t=>t.refreshRateLimits())))).then(()=>this.emit("ready"))}get tokens(){return this.clients.map(e=>e.token)}destroy(){return this.clients.forEach(e=>this.removeToken(e.token)),this}};x.extend(D);function X(n){switch(!0){case/[23]\d{2}/.test(`${n}`):return y.green(n);case/[4]\d{2}/.test(`${n}`):return y.yellow(n);default:return y.red(n)}}function Q(n){let e={resource:n.resource,token:n.token,pending:n.pending,remaining:n.remaining,reset:x.unix(n.reset).fromNow(),duration:`${n.duration/1e3}s`,status:X(n.status||"-")};return F([Object.values(e)],{columnDefault:{alignment:"right",width:5},columns:{0:{width:11},1:{width:5},2:{width:3},3:{width:5},4:{width:18},5:{width:7},6:{width:`${n.status||"-"}`.length,alignment:"left"}},border:B("void"),singleLine:!0}).trimEnd()+`
`}function Y(n){return n.split(/\n/g).map(e=>e.replace(/\s/g,"")).reduce((e,t)=>!t||/^(\/{2}|#).*/gi.test(t)?e:e.concat([t.replace(/.*:(.+)/i,"$1")]),[]).reduce((e,t)=>f(t,e),[])}function f(n,e){if(n.length!==40)throw new Error("Invalid access token detected (they have 40 characters)");return $([...e,n])}function R(n){let e=j(process.cwd(),n);if(!L(e))throw new Error(`File "${n}" not found!`);return Y(z(e,"utf8"))}function E(n){let e=C(n.tokens).reduce((r,i)=>f(i,r),[]),t=G();process.env.DEBUG==="true"&&t.use(U({level:"info",serializers:{req:r=>({method:r.method,url:r.url}),res:({statusCode:r})=>({statusCode:r})},logger:M(W({colorize:!0}))})),n.statusMonitor&&t.use(H.getMiddleware({name:"GitHub Proxy Server",version:process.env.npm_package_version,uriPath:"/status"}));let o=new g(e,{overrideAuthorization:n.overrideAuthorization??!0,...n});o.on("error",r=>t.emit("error",r)),n.silent||(o.on("log",r=>t.emit("log",Q(r))),o.on("warn",r=>t.emit("warn",r)));function s(r,i){i.status(600).send({message:"Endpoint not supported"})}return t.post("/graphql",(r,i)=>o.schedule(r,i)).get("/*",(r,i)=>o.schedule(r,i)),t.delete("/*",s),t.patch("/*",s),t.put("/*",s),t.post("/*",s),t}function ie(){let n=new J;return n.addOption(new c("-p, --port [port]","Port to start the proxy server").argParser(Number).default(3e3).env("PORT")).addOption(new c("-t, --token [token]","GitHub token to be used").argParser(f).default([])).addOption(new c("--tokens [file]","File containing a list of tokens").argParser(R).env("GPS_TOKENS_FILE")).addOption(new c("--request-timeout [timeout]","Request timeout (ms)").argParser(Number).default(3e4).env("GPS_REQUEST_TIMEOUT")).addOption(new c("--min-remaining <number>","Stop using token on a minimum of").argParser(Number).default(100).env("GPS_MIN_REMAINING")).addOption(new c("--clustering","(clustering) enable clustering (requires redis)").default(!1).env("GPS_CLUSTERING_HOST")).addOption(new c("--clustering-host [host]","(clustering) redis host").implies({clustering:!0}).default("localhost").env("GPS_CLUSTERING_HOST")).addOption(new c("--clustering-port [port]","(clustering) redis port").argParser(Number).implies({clustering:!0}).default(6379).env("GPS_CLUSTERING_PORT")).addOption(new c("--clustering-db [db]","(clustering) redis db").argParser(Number).implies({clustering:!0}).default(0).env("GPS_CLUSTERING_DB")).addOption(new c("--silent","Dont show requests outputs")).addOption(new c("--no-override-authorization","By default, the authorization header is overrided with a configured token")).addOption(new c("--no-status-monitor","Disable requests monitoring on /status")).version(b.version||"?","-v, --version","output the current version").action(async e=>{!e.token.length&&!(e.tokens&&e.tokens.length)&&(l.info(`${n.helpInformation()}`),l.error(`Arguments missing ("--token" or "--tokens" is mandatory).

`),process.exit(1)),V.defaultMaxListeners=Number.MAX_SAFE_INTEGER;let t=[...e.token,...e.tokens||[]].reduce((i,a)=>f(a,i),[]),o={requestTimeout:e.requestTimeout,silent:e.silent,overrideAuthorization:e.overrideAuthorization,tokens:t,clustering:e.clustering?{host:e.clusteringHost,port:e.clusteringPort,db:e.clusteringDb}:void 0,minRemaining:e.minRemaining,statusMonitor:e.statusMonitor},s=E(o);s.on("log",i=>process.stdout.write(i.toString())).on("warn",l.warn).on("error",l.error);let r=s.listen({host:"0.0.0.0",port:e.port},i=>{i&&(l.error(i),process.exit(1));let a=`http://${K.address()}:${e.port}`;l.success(`Proxy server running on ${a} (tokens: ${v.greenBright(t.length)})`);function u(m){return Object.entries(re(m,p=>Z(p))).sort((p,h)=>p[0]>h[0]?1:-1).map(([p,h])=>`${p}: ${ee(h)?`{ ${u(h)} }`:v.greenBright(h)}`).join(", ")}l.success(`${v.bold("Options")}: %s`,u(te(o,["token","tokens"])))});process.on("SIGTERM",async()=>{l.info("SIGTERM signal received: closing HTTP server"),r.close(i=>{i&&(l.error(i),process.exit(1)),l.success("Server closed"),process.exit(0)})})})}import.meta.url===se(process.argv[1]).href&&ie().parse(process.argv);export{ie as createCli};
//# sourceMappingURL=cli.js.map